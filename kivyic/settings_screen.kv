#:import OneLineListItem kivymd.list.OneLineListItem
#:import MDDropdownMenu kivymd.menu.MDDropdownMenu

<ICSettingList>
    cols: 1
    size_hint_y: None
    height: self._min_list_height
    padding: 0, self._list_vertical_padding



<ICSettingList>: # from MDList
    cols: 1
    size_hint_y: None
    height: self._min_list_height
    padding: 0, self._list_vertical_padding

<ICBaseSettingListItem>: # from BaseListItem
    size_hint_y: None
    #height: self.minimum_height
    canvas:
        Color:
            rgba: self.theme_cls.divider_color if root.divider is not None else (0, 0, 0, 0)
        Line:
            points: (root.x ,root.y, root.x+self.width, root.y) if root.divider == 'Full' else (root.x+root._txt_left_pad, root.y, root.x+self.width-root._txt_left_pad-root._txt_right_pad, root.y)

    BoxLayout:
        id: _text_container
        orientation: 'vertical'
        pos: root.pos
        padding: root._txt_left_pad, root._txt_top_pad, root._txt_right_pad, root._txt_bot_pad
        MDLabel:
            id: _lbl_primary
            text: root.text
            font_style: root.font_style
            theme_text_color: root.theme_text_color
            text_color: root.text_color
            size_hint_y: None
            height: self.texture_size[1]
    MDLabel:
        id: title_container
        size_hint: 1, None
        #x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        height: dp(12)
        y: root.y + root.height - self.height
        text: root.title
        canvas.after:
            Color:
                rgba: 0,0,1,.3
            Rectangle:
                size: self.size
                pos: self.pos
    MDLabel:
        id: description_container
        size_hint: 1, None
        #x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        height: dp(12)
        y: root.y
        text: root.description
        canvas.after:
            Color:
                rgba: 1,0,1,.3
            Rectangle:
                size: self.size
                pos: self.pos


<ICSettingLineSwitch>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<ICSettingLineOption>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<ICSettingLineMenu>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<ICSettingTitle>
    pos_hint: {'top': 0.95}
    size_hint: 1, None
    x:  m_res.HORIZ_MARGINS
    height: dp(12)

<ICSettingDesc>
    #pos_hint: {'top': 0.15}
    size_hint: 1, None
    x:  m_res.HORIZ_MARGINS
    height: dp(12)
    MDLabel:
        id: desc

<ICSettingScreen>:
    name: 'settingscreen'
    layout_container: layout_container
    GridLayout:
        cols: 1
        Toolbar:
            title: 'Settings'
            pos_hint: {'center_x': 0.5, 'center_y': 1}
            md_bg_color: get_color_from_hex(colors['Blue']['500'])
            background_palette: 'Blue'
            background_hue: '500'
            right_action_items: [['close-circle', lambda x: root.done()]]
        ScrollView:
            do_scroll_x: False
            MDList:
                id: layout_container


