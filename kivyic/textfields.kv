#: include dp kivy.metrics.dp
#:import ICIconLabel kivyic.label.ICIconLabel
#:import MDLabel kivymd.label.MDLabel
#:import MDNavigationDrawer kivymd.navigationdrawer.MDNavigationDrawer
#:import NavigationLayout kivymd.navigationdrawer.NavigationLayout
#:import NavigationDrawerDivider kivymd.navigationdrawer.NavigationDrawerDivider
#:import NavigationDrawerToolbar kivymd.navigationdrawer.NavigationDrawerToolbar

<ICTextFieldPlain>:
    canvas.before:
        Clear
        Color:
            rgba: self.line_color_normal
        #Line:
        #    points: self.x, self.y + dp(12), self.x + self.width, self.y + dp(12)
        #    width: 1
        #    dash_length: dp(3)
        #    dash_offset: 2 if self.disabled else 0
        Color:
            rgba: self._current_line_color
        Rectangle:
            size: self._line_width, dp(2)
            pos: self.center_x - (self._line_width / 2), self.y
        Color:
            rgba: self._current_error_color
        Rectangle:
            texture: self._msg_lbl.texture
            size: self._msg_lbl.texture_size
            pos: self.x, self.y
        Color:
            rgba: self._current_right_lbl_color
        Rectangle:
            texture: self._right_msg_lbl.texture
            size: self._right_msg_lbl.texture_size
            pos: self.width-self._right_msg_lbl.texture_size[0]+dp(45), self.y
        Color:
            rgba: (self._current_line_color if self.focus and not self.cursor_blink else (0, 0, 0, 0))
        Rectangle:
            pos: [int(x) for x in self.cursor_pos]
            size: 1, -self.line_height
        Color:
            rgba: self._current_hint_text_color
        Rectangle:
            texture: self._hint_lbl.texture
            size: self._hint_lbl.texture_size
            pos: self.x, self.y + self.height - self._hint_y
        Color:
            rgba: self.disabled_foreground_color if self.disabled else (self.hint_text_color if not self.text and not self.focus else self.foreground_color)
    font_name: 'Roboto'
    foreground_color: app.theme_cls.text_color
    font_size: sp(15)
    bold: False
    padding: 0, dp(16), 0, dp(9)
    multiline: False
    size_hint_y: None
    height: self.minimum_height + dp(2)

<BaseTextInputItem>
    size_hint_y: None
    canvas:
        Color:
            rgba: self.theme_cls.divider_color if root.divider is not None else (0, 0, 0, 0)
        Line:
            points: (root.x ,root.y, root.x+self.width, root.y) if root.divider == 'Full' else (root.x+root._txt_left_pad, root.y, root.x+self.width-root._txt_left_pad-root._txt_right_pad, root.y)
    BoxLayout:
        id: _text_container
        orientation: 'vertical'
        pos: root.pos
        padding: root._txt_left_pad, root._txt_top_pad, root._txt_right_pad, root._txt_bot_pad
        ICTextFieldPlain:
            id: _lbl_primary
            text: root.text
            padding: [0, 0]
            font_style: root.font_style
            theme_text_color: root.theme_text_color
            text_color: root.text_color
            #canvas.after:
            #    Color:
            #        rgba: 0,0,1,.3
            #    Rectangle:
            #        size: self.size
            #        pos: self.pos
        MDLabel:
            id: _lbl_secondary
            text: '' if root._num_lines == 1 else root.secondary_text
            font_style: root.secondary_font_style
            theme_text_color: root.secondary_theme_text_color
            text_color: root.secondary_text_color
            size_hint_y: None
            height: 0 if root._num_lines == 1 else self.texture_size[1]
            shorten: True if root._num_lines == 2 else False

<OneLineAvatarTextInputItem>
    BoxLayout:
        id: _left_container
        size_hint: None, None
        x: root.x + dp(16)
        y: root.y + root.height/2 - self.height/2
        size: dp(40), dp(40)

<ThreeLineAvatarTextInputItem>
    BoxLayout:
        id: _left_container
        size_hint: None, None
        x: root.x + dp(16)
        y: root.y + root.height - root._txt_top_pad - self.height - dp(5)
        size: dp(40), dp(40)

<OneLineIconTextInputItem>
    BoxLayout:
        id: _left_container
        size_hint: None, None
        x: root.x + dp(16)
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<ThreeLineIconTextInputItem>
    BoxLayout:
        id: _left_container
        size_hint: None, None
        x: root.x + dp(16)
        y: root.y + root.height - root._txt_top_pad - self.height - dp(5)
        size: dp(48), dp(48)

<OneLineRightIconTextInputItem>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<ThreeLineRightIconTextInputItem>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<OneLineAvatarIconTextInputItem>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<TwoLineAvatarIconTextInputItem>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height/2 - self.height/2
        size: dp(48), dp(48)

<ThreeLineAvatarIconTextInputItem>
    BoxLayout:
        id: _right_container
        size_hint: None, None
        x: root.x + root.width - m_res.HORIZ_MARGINS - self.width
        y: root.y + root.height - root._txt_top_pad - self.height - dp(5)
        size: dp(48), dp(48)

<ICSearchInput>:
    text_input: text_input
    orientation: 'horizontal'
    size_hint_y: None
    height: dp(48)
    padding: dp(5)
    canvas.before:
        Color:
            rgba: app.theme_cls.divider_color
        Rectangle:
            size: self.size
            pos: self.pos
    BoxLayout:
        orientation: 'horizontal'
        padding: 5,0
        canvas:
            Color:
                rgba: app.theme_cls.bg_normal
            RoundedRectangle:
                pos: self.pos
                size: self.size
        ICIconLabel:
            id: lbl
            icon: 'magnify'
            size_hint_x: None
            width: dp(20)
            font_size: '20'
        TextInput:
            id: text_input
            #text: root.setter(root.text)
            hint_text: root.hint_text
            multiline: False
            background_normal: ''
            background_active: ''
            on_text_validate: root.on_text_validate(self, self.text)
            padding: 6,8,6,6
    MDFlatButton:
        text: 'Cancel'
        size_hint_x: None
        width: dp(40)
        on_release: root.on_cancel()



# --------------------------------------------------------------------------------------



